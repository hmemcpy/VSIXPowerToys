<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
                    xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
                    xmlns:ui="clr-namespace:Microsoft.VisualStudio.ExtensionManager.UI;assembly=Microsoft.VisualStudio.ExtensionManager.Implementation"
                    xmlns:glob="clr-namespace:System.Globalization;assembly=mscorlib"
                    xmlns:self="clr-namespace:VSIXPowerToys.Extension.ExtensionManager"
                    xmlns:extensionManager="clr-namespace:Microsoft.VisualStudio.ExtensionManager;assembly=Microsoft.VisualStudio.ExtensionManager">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="TemplateStyles.xaml"/>
  </ResourceDictionary.MergedDictionaries>
  <DataTemplate x:Key="InstalledTileTemplate" DataType="self:InstalledExtensionItem">
    <FrameworkTemplate.Resources>
      <BooleanToVisibilityConverter x:Key="BoolToVis"/>
      <ui:GreyscaleEffect x:Key="GreyscaleEffect"/>
      <Style x:Key="InstalledTileTemplateImageStyle" BasedOn="{StaticResource TileImageStyle}"
             TargetType="{x:Type Image}">
        <Style.Triggers>
          <DataTrigger x:Uid="DataTrigger_3" Binding="{Binding ShowAsEnabled, Mode=OneWay}" Value="False">
            <Setter x:Uid="Setter_16" Property="UIElement.Effect" Value="{StaticResource GreyscaleEffect}"/>
          </DataTrigger>
        </Style.Triggers>
      </Style>
    </FrameworkTemplate.Resources>
    <Grid x:Uid="Grid_1" Style="{StaticResource TileTemplateGridStyle}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition x:Uid="ColumnDefinition_1" Width="38"/>
        <ColumnDefinition x:Uid="ColumnDefinition_2" Width="*"/>
        <ColumnDefinition x:Uid="ColumnButtons" Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Image x:Uid="Image_TileIcon" AutomationProperties.AutomationId="Image_TileIcon"
             Style="{StaticResource InstalledTileTemplateImageStyle}"
             IsEnabled="{Binding ShowAsEnabled, Mode=OneWay}">
        <Image.Source>
          <Binding x:Uid="Image_TileIconBinding" Path="InstalledExtension.IconFullPath"
                   Converter="{StaticResource uriToIconConverter}"
                   FallbackValue="{StaticResource BitmapImage_DefaultIcon}"/>
        </Image.Source>
      </Image>
      <StackPanel x:Uid="StackPanel_1" Grid.Column="1" Style="{StaticResource TileMiddleStackPanelStyle}"
                  IsEnabled="{Binding ShowAsEnabled, Mode=OneWay}">
        <ui:TextBlockControl x:Uid="TextBlock_TileName" AutomationProperties.AutomationId="TextBlock_TileName"
                               Style="{StaticResource TileTitleTextBoxStyle}"
                               ToolTip="{Binding InstalledExtension.Header.LocalizedName}">
          <Run x:Uid="Run_TileName" AutomationProperties.AutomationId="Run_TileName"
               Text="{Binding InstalledExtension.Header.LocalizedName}"/>
          <Run x:Uid="Run_TileDisabledLabel" AutomationProperties.AutomationId="Run_TileDisabledLabel"
               FontWeight="Normal" Text="{Binding DisabledLabelValue, Mode=OneWay}"/>
          <Run x:Uid="Run_TileUpdatedLabel" AutomationProperties.AutomationId="Run_TileUpdatedLabel"
               FontWeight="Normal" Foreground="Green" Text="{Binding UpdatedLabelValue, Mode=OneWay}"/>
          <Run x:Uid="Run_TileExperimentalLabel" AutomationProperties.AutomationId="Run_TileExperimentalLabel"
               FontWeight="Normal" Text="{Binding ExperimentalLabelValue, Mode=OneWay}"/>
        </ui:TextBlockControl>
        <ui:TextBlockControl x:Uid="TextBlock_TileDescription" AutomationProperties.AutomationId="TextBlock_TileDescription"
                               Style="{StaticResource TileDescriptionTextBoxStyle}"
                               Text="{Binding InstalledExtension.Header.LocalizedDescription}">
          <FrameworkElement.ToolTip>
            <TextBlock x:Uid="TextBlock_1" Style="{StaticResource TileToolTipStyle}"
                       Text="{Binding InstalledExtension.Header.LocalizedDescription}"/>
          </FrameworkElement.ToolTip>
        </ui:TextBlockControl>
      </StackPanel>
      <StackPanel x:Name="ExtensionManagementButtonsStackPanel" x:Uid="StackPanel_8" Grid.Column="2"
                  Style="{StaticResource TileRightStackPanelStyle}">
        <Button x:Name="Button_ToggleExtensionEnabledState"
                AutomationProperties.AutomationId="Button_ToggleExtensionEnabledState"
                Style="{StaticResource DetailButtonStyle}"
                Command="{x:Static ui:ExtensionManagerWindowCommands.ToggleExtensionEnabledState}"
                Content="{Binding EnableDisableButtonContent, Mode=OneWay}">
          <FrameworkElement.ToolTip>
            <TextBlock x:Uid="TextBlock_ToggleExtensionEnabledStateTooltip" Style="{StaticResource TileToolTipStyle}"
                       Text="{Binding EnableDisableButtonDisabledReason, Mode=OneWay}"/>
          </FrameworkElement.ToolTip>
        </Button>
        <Button x:Name="Button_Uninstall" x:Uid="Button_Uninstall"
                AutomationProperties.AutomationId="Button_Uninstall" AutomationProperties.Name="Uninstall"
                Style="{StaticResource DetailButtonStyle}"
                Command="{x:Static ui:ExtensionManagerWindowCommands.UninstallExtension}" IsDefault="true">
          <FrameworkElement.ToolTip>
            <TextBlock x:Uid="TextBlock_UninstallTooltip" Style="{StaticResource TileToolTipStyle}"
                       Text="{Binding UninstallButtonDisabledReason, Mode=OneWay}"/>
          </FrameworkElement.ToolTip>
          <Grid x:Uid="Grid_12">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Uid="ColumnDefinition_3" Width="Auto"/>
              <ColumnDefinition x:Uid="ColumnDefinition_4" Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Image x:Uid="Image_1" Margin="0,2,2,2" VerticalAlignment="Center"
                   Visibility="{Binding ShowUACShieldIconOnUninstallButton, Converter={StaticResource BoolToVis}, Mode=OneWay}"
                   Source="{Binding UACShieldIcon, Mode=OneWay}"/>
            <AccessText x:Name="AccessText_Uninstall" x:Uid="AccessText_Uninstall" Grid.Column="1"
                        VerticalAlignment="Center">_Uninstall</AccessText>
          </Grid>
        </Button>
      </StackPanel>
    </Grid>
    <DataTemplate.Triggers>
      <DataTrigger x:Uid="DataTrigger_2" Value="True" Binding="{Binding IsSelected}">
        <Setter x:Uid="Setter_15" TargetName="ExtensionManagementButtonsStackPanel" Property="UIElement.Visibility"
                Value="Visible"/>
      </DataTrigger>
      <DataTrigger x:Uid="DataTrigger_4" Binding="{Binding EnableDisableButtonDisabledReason, Mode=OneWay}"
                   Value="{x:Null}">
        <Setter x:Uid="Setter_17" TargetName="Button_ToggleExtensionEnabledState" Value="{x:Null}"
                Property="FrameworkElement.ToolTip"/>
      </DataTrigger>
      <DataTrigger x:Uid="DataTrigger_5" Binding="{Binding UninstallButtonDisabledReason, Mode=OneWay}"
                   Value="{x:Null}">
        <Setter x:Uid="Setter_18" TargetName="Button_Uninstall" Value="{x:Null}"
                Property="FrameworkElement.ToolTip"/>
      </DataTrigger>
      <DataTrigger x:Uid="DataTrigger_23" Value="False" Binding="{Binding UninstallButtonIsEnabled}">
        <Setter x:Uid="Setter_23" TargetName="Button_Uninstall" Property="UIElement.IsEnabled" Value="false"/>
        <Setter x:Uid="Setter_24" TargetName="AccessText_Uninstall" Property="AccessText.Foreground" Value="Gray"/>
      </DataTrigger>
      <DataTrigger Value="True" Binding="{Binding IsExtensionSdk}">
        <Setter TargetName="Button_ToggleExtensionEnabledState" Property="Visibility" Value="Collapsed"/>
      </DataTrigger>
      <DataTrigger x:Uid="DataTrigger_7" Value="True" Binding="{Binding IsPlatformSdk}">
        <Setter x:Uid="Setter_21" TargetName="Button_ToggleExtensionEnabledState" Property="UIElement.Visibility"
                Value="Collapsed"/>
      </DataTrigger>
      <DataTrigger x:Uid="DataTrigger_8" Value="True" Binding="{Binding IsExtIncompatible}">
        <Setter x:Uid="Setter_22" TargetName="Button_ToggleExtensionEnabledState" Property="UIElement.Visibility"
                Value="Collapsed"/>
      </DataTrigger>
      <DataTrigger x:Uid="DataTrigger_9" Value="True" Binding="{Binding IsExtensionExperimental}">
        <Setter x:Uid="Setter_25" TargetName="Button_ToggleExtensionEnabledState" Property="UIElement.Visibility"
                Value="Collapsed"/>
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <DataTemplate x:Key="InstalledDetailTemplate">
    <FrameworkTemplate.Resources>
      <BooleanToVisibilityConverter x:Uid="BooleanToVisibilityConverter_3" x:Key="boolToVis"/>
      <ui:EnumToVisibilityConverter x:Uid="EnumToVisibilityConverter_1" x:Key="enumToVis"/>
      <Style x:Uid="Style_8" x:Key="DetailMoreInfoLinkStyle"
             BasedOn="{StaticResource DetailHyperlinkTextBlockStyle}"
             TargetType="{x:Type ui:TextBlockControl}">
        <Style.Triggers>
          <DataTrigger x:Uid="Trigger_3" Binding="{Binding InstalledExtension.Header.MoreInfoUrl}" Value="{x:Null}">
            <Setter x:Uid="Setter_13" Property="UIElement.Visibility" Value="Collapsed"/>
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <Style x:Uid="Style_9" x:Key="DetailGettingStartedLinkStyle"
             BasedOn="{StaticResource DetailHyperlinkTextBlockStyle}"
             TargetType="{x:Type ui:TextBlockControl}">
        <Style.Triggers>
          <DataTrigger x:Uid="Trigger_4" Binding="{Binding InstalledExtension.Header.GettingStartedGuide}"
                       Value="{x:Null}">
            <Setter x:Uid="Setter_14" Property="UIElement.Visibility" Value="Collapsed"/>
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <Style x:Uid="Style_12" x:Key="DetailReleaseNotesLinkStyle"
             BasedOn="{StaticResource DetailHyperlinkTextBlockStyle}"
             TargetType="{x:Type ui:TextBlockControl}">
        <Style.Triggers>
          <DataTrigger x:Uid="Style_12_Trigger" Binding="{Binding InstalledExtension.Header.ReleaseNotes}"
                       Value="{x:Null}">
            <Setter x:Uid="Style_12_Setter" Property="UIElement.Visibility" Value="Collapsed"/>
          </DataTrigger>
        </Style.Triggers>
      </Style>
    </FrameworkTemplate.Resources>
    <ScrollViewer x:Uid="ScrollViewer_1" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto"
                  Focusable="false">
      <Grid x:Uid="Grid_11" Margin="8">
        <Grid.RowDefinitions>
          <RowDefinition x:Uid="RowDefinition_14" Height="Auto"/>
          <RowDefinition x:Uid="RowDefinition_15" Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel x:Uid="StackPanel_7">
          <StackPanel x:Uid="StackPanel_3" Style="{StaticResource DetailMetadataStyle}">
            <ui:TextBlockControl x:Uid="TextBlock_DetailCreatedBy" Text="Created by:"
                                   Style="{StaticResource DetailMetadataLabelStyle}"/>
            <ui:TextBlockControl x:Uid="TextBlock_DetailCreatedByValue"
                                   AutomationProperties.AutomationId="TextBlock_DetailCreatedByValue"
                                   Style="{StaticResource DetailMetadataValueStyle}" Text="{Binding InstalledExtension.Header.Author}"/>
          </StackPanel>
          <StackPanel x:Uid="StackPanel_5">
            <FrameworkElement.Style>
              <Style x:Uid="Style_11" BasedOn="{StaticResource DetailMetadataStyle}" TargetType="{x:Type StackPanel}">
                <Style.Triggers>
                  <DataTrigger x:Uid="Trigger_5" Binding="{Binding InstalledExtension.InstalledOn}" Value="{x:Null}">
                    <Setter x:Uid="Setter_19" Property="UIElement.Visibility" Value="Collapsed"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </FrameworkElement.Style>
            <ui:TextBlockControl x:Uid="TextBlock_DetailDateInstalled" Text="Date Installed:"
                                   Style="{StaticResource DetailMetadataLabelStyle}"/>
            <ui:TextBlockControl x:Uid="TextBlock_DetailDateInstalledValue"
                                   AutomationProperties.AutomationId="TextBlock_DetailDateInstalledValue"
                                   Style="{StaticResource DetailMetadataValueStyle}"
                                   Text="{Binding InstalledExtension.InstalledOn, StringFormat={}{0:d}, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}"/>
          </StackPanel>
          <StackPanel x:Uid="StackPanel_9" Style="{StaticResource DetailMetadataStyle}">
            <ui:TextBlockControl x:Uid="TextBlock_DetailVersion" Text="Version:" Style="{StaticResource DetailMetadataLabelStyle}"/>
            <ui:TextBlockControl x:Uid="TextBlock_DetailVersionValue"
                                   AutomationProperties.AutomationId="TextBlock_DetailVersionValue"
                                   Style="{StaticResource DetailMetadataValueStyle}"
                                   Text="{Binding InstalledExtension.Header.Version}"/>
          </StackPanel>
          <ui:TextBlockControl x:Uid="TextBlock_DetailReleaseNotesLink"
                                 AutomationProperties.AutomationId="TextBlock_DetailReleaseNotesLink"
                                 Style="{StaticResource DetailReleaseNotesLinkStyle}">
            <Hyperlink x:Name="releaseNotesLink" x:Uid="Hyperlink_DetailReleaseNotesLink"
                       AutomationProperties.AutomationId="Hyperlink_DetailReleaseNotesLink"
                       Style="{StaticResource {x:Type Hyperlink}}"
                       NavigateUri="{Binding InstalledExtension.Header.ReleaseNotes}">
              <Run x:Uid="Run_DetailReleaseNotesLink" AutomationProperties.AutomationId="Run_DetailReleaseNotesLink"
                   Text="Release Notes"/>
            </Hyperlink>
          </ui:TextBlockControl>
          <ui:TextBlockControl x:Uid="TextBlock_DetailMoreInfoLink"
                                 AutomationProperties.AutomationId="TextBlock_DetailMoreInfoLink"
                                 Style="{StaticResource DetailMoreInfoLinkStyle}">
            <Hyperlink x:Uid="Hyperlink_DetailMoreInfoLink"
                       AutomationProperties.AutomationId="Hyperlink_DetailMoreInfoLink"
                       Style="{StaticResource {x:Type Hyperlink}}"
                       NavigateUri="{Binding InstalledExtension.Header.MoreInfoUrl}">
              <Run x:Uid="Run_DetailMoreInfoLink" AutomationProperties.AutomationId="Run_DetailMoreInfoLink"
                   Text="More Information"/>
            </Hyperlink>
          </ui:TextBlockControl>
          <ui:TextBlockControl x:Uid="TextBlock_DetailGettingStartedLink"
                                 AutomationProperties.AutomationId="TextBlock_DetailGettingStartedLink"
                                 Style="{StaticResource DetailGettingStartedLinkStyle}">
            <Hyperlink x:Name="GettingStartedLink" x:Uid="Hyperlink_DetailGettingStartedLink"
                       AutomationProperties.AutomationId="Hyperlink_DetailGettingsStartedLink"
                       Style="{StaticResource {x:Type Hyperlink}}"
                       NavigateUri="{Binding InstalledExtension.Header.GettingStartedGuide}">
              <Run x:Uid="Run_DetailGettingStartedLink"
                   AutomationProperties.AutomationId="Run_DetailGettingStartedLink" Text="Getting Started"/>
            </Hyperlink>
          </ui:TextBlockControl>
          <CheckBox x:Name="AutoUpdateCheckBox" x:Uid="CheckBox_DetailAutoUpdateCheckBox"
                    AutomationProperties.AutomationId="CheckBox_DetailedAutoUpdateCheckBox"
                    Style="{StaticResource DetailedCheckBoxStyle}"
                    IsEnabled="{Binding AutoUpdateCheckboxStateIsEnabled}"
                    IsChecked="{Binding AutoUpdateStateIsEnabled}"
                    Visibility="{Binding AutoUpdateStateIsVisible, Converter={StaticResource boolToVis}}">
            <AccessText x:Uid="AccessText_1" TextWrapping="Wrap" Text="Automatically update this extension"/>
          </CheckBox>
          <DockPanel x:Uid="DockPanel_1" LastChildFill="true" Margin="0,3,0,0">
            <Image x:Uid="WarningIcon_1" DockPanel.Dock="Left" Source="DisabledExtensionIcon.png" Height="16"
                   Width="16" VerticalAlignment="Top" Margin="0,2,5,0"
                   Visibility="{Binding InstalledExtension.State, Converter={StaticResource enumToVis}}"/>
            <ui:TextBlockControl x:Uid="TextBlock_DisabledExtension" DockPanel.Dock="Right"
                                   Text="This extension is disabled because the installed version is incompatible with Visual Studio. Please go to the Updates tab to get the latest version of this extension to enable it."
                                   AutomationProperties.AutomationId="TextBlock_DisabledExtensionInformation"
                                   Style="{StaticResource DisabledExtensionLabelStyle}"
                                   Visibility="{Binding InstalledExtension.State, Converter={StaticResource enumToVis}}"/>
          </DockPanel>
          <DockPanel x:Uid="DockPanel_2" LastChildFill="true" Margin="0,3,0,0">
            <Image x:Uid="WarningIcon_2" DockPanel.Dock="Left" Source="DisabledExtensionIcon.png" Height="16"
                   Width="16" VerticalAlignment="Top" Margin="0,2,5,0"
                   Visibility="{Binding ShouldShowAutoUpdateStateInvalidWarning, Converter={StaticResource boolToVis}}"/>
            <ui:TextBlockControl x:Uid="TextBlock_AutoUpdateStateInvalid" DockPanel.Dock="Right"
                                   Text="This type of extension cannot update automatically. Updates will appear on the Updates tab."
                                   AutomationProperties.AutomationId="TextBlock_AutoUpdateStateInvalidInformation"
                                   Style="{StaticResource DisabledExtensionLabelStyle}"
                                   Visibility="{Binding ShouldShowAutoUpdateStateInvalidWarning, Converter={StaticResource boolToVis}}"/>
          </DockPanel>
          <DockPanel x:Uid="DockPanel_3" LastChildFill="true" Margin="0,3,0,0">
            <Image x:Uid="WarningIcon_3" DockPanel.Dock="Left" Source="DisabledExtensionIcon.png" Height="16"
                   Width="16" VerticalAlignment="Top" Margin="0,2,5,0"
                   Visibility="{Binding ShouldShowAutoUpdateExtensionsDisabledWarning, Converter={StaticResource boolToVis}}"/>
            <ui:TextBlockControl x:Uid="TextBlock_AutoUpdateExtensionsDisabled" DockPanel.Dock="Right"
                                   Text="Enable automatic updates under Tools | Options | Environment | Extensions and Updates."
                                   AutomationProperties.AutomationId="TextBlock_AutoUpdateExtensionsDisabledInformation"
                                   Style="{StaticResource DisabledExtensionLabelStyle}"
                                   Visibility="{Binding ShouldShowAutoUpdateExtensionsDisabledWarning, Converter={StaticResource boolToVis}}"/>
          </DockPanel>
          <DockPanel x:Uid="DockPanel_4" LastChildFill="true" Margin="0,3,0,0">
            <Image x:Uid="WarningIcon_4" DockPanel.Dock="Left" Source="DisabledExtensionIcon.png" Height="16"
                   Width="16" VerticalAlignment="Top" Margin="0,2,5,0"
                   Visibility="{Binding ShouldShowSetAutoUpdateStateFailedWarning, Converter={StaticResource boolToVis}}"/>
            <ui:TextBlockControl x:Uid="TextBlock_SetAutoUpdateStateFailed" DockPanel.Dock="Right"
                                   Text="Changing automatically update state to this extension failed. Please restart Visual Studio and try again."
                                   AutomationProperties.AutomationId="TextBlock_SetAutoUpdateStateFailedInformation"
                                   Style="{StaticResource DisabledExtensionLabelStyle}"
                                   Visibility="{Binding ShouldShowSetAutoUpdateStateFailedWarning, Converter={StaticResource boolToVis}}"/>
          </DockPanel>
          <DockPanel x:Uid="DockPanel_5" LastChildFill="true" Margin="0,3,0,0">
            <Image x:Uid="WarningIcon_5" DockPanel.Dock="Left" Source="DisabledExtensionIcon.png" Height="16"
                   Width="16" VerticalAlignment="Top" Margin="0,2,5,0"
                   Visibility="{Binding InstalledExtension.Header.IsExperimental, Converter={StaticResource boolToVis}}"/>
            <ui:TextBlockControl x:Uid="TextBlock_DogfoodableExtension" DockPanel.Dock="Right"
                                   Text="This extension adds experimental functionality. Revert to default by uninstalling this extension."
                                   AutomationProperties.AutomationId="TextBlock_DogfoodableExtensionInformation"
                                   Style="{StaticResource DisabledExtensionLabelStyle}"
                                   Visibility="{Binding InstalledExtension.Header.IsExperimental, Converter={StaticResource boolToVis}}"/>
          </DockPanel>
          <DockPanel x:Uid="DockPanel_6" LastChildFill="true" Margin="0,3,0,0">
            <imaging:CrispImage x:Uid="InfoIcon_1" DockPanel.Dock="Left"
                                Moniker="{x:Static catalog:KnownMonikers.StatusInformation}" Height="16" Width="16"
                                VerticalAlignment="Top" Margin="0,2,5,0"
                                Visibility="{Binding ShouldShowAutoUpdateAdminRequiredWarning, Converter={StaticResource boolToVis}}"/>
            <ui:TextBlockControl x:Uid="TextBlock_AdminRequired" DockPanel.Dock="Right"
                                   Text="Restart Microsoft Visual Studio as administrator to change this setting."
                                   AutomationProperties.AutomationId="TextBlock_AdminRequiredInformation"
                                   Style="{StaticResource DisabledExtensionLabelStyle}"
                                   Visibility="{Binding ShouldShowAutoUpdateAdminRequiredWarning, Converter={StaticResource boolToVis}}"/>
          </DockPanel>
        </StackPanel>
        <Border x:Uid="Border_2" HorizontalAlignment="Center" VerticalAlignment="Center"
                Style="{StaticResource DetailBorderStyle}" Grid.Row="1" Margin="0,4,0,0">
          <Image x:Uid="Image_PreviewImage" AutomationProperties.AutomationId="Image_PreviewImage"
                 Style="{StaticResource DetailImageStyle}">
            <Image.Source>
              <Binding x:Uid="Image_PreviewImageBinding" Path="InstalledExtension.PreviewImageFullPath"
                       Converter="{StaticResource uriToPreviewImageConverter}"
                       FallbackValue="{StaticResource BitmapImage_DefaultPreviewImage}"/>
            </Image.Source>
          </Image>
        </Border>
      </Grid>
    </ScrollViewer>
  </DataTemplate>
</ResourceDictionary>